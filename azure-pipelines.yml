# Build script for continuous integration builds with Azure Pipelines

strategy:
  matrix:
    gcc:
      imageName: 'ubuntu-16.04'
      compiler: g++-8
      flags: ''
    clang:
      imageName: 'ubuntu-16.04'
      compiler: clang++-7
      flags: '-DSLANG_COVERAGE=ON -DSLANG_SANITIZERS=undefined,address "-DCMAKE_CXX_CLANG_TIDY=/usr/lib/llvm-7/bin/clang-tidy;-quiet;-checks=-*,clang-analyzer-*,bugprone-*,performance-*,modernize-*,-modernize-use-auto,-modernize-raw-string-literal,-bugprone-suspicious-semicolon,-clang-analyzer-cplusplus.NewDelete*,-clang-analyzer-cplusplus.InnerPointer,misc-*"'

pool:
  vmImage: $(imageName)

steps:
- script: |
    wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
    sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main" -y
    sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    sudo apt-get update
    sudo apt-get install -y gcc-8 g++-8 clang-7 clang-tidy-7
  displayName: 'Install compilers'

- script: |
    export PATH="$HOME/.local/bin:$PATH"
    sudo apt-get install -y python3-setuptools python3-pip
    pip3 install wheel
    pip3 install conan
    sudo ln -s ~/.local/bin/conan /usr/local/bin/conan
    conan user
  displayName: 'Install Conan'

- script: |
    mkdir build
    cd build
    cmake -DCMAKE_CXX_COMPILER=$(compiler) -DCMAKE_BUILD_TYPE=Debug -DCI_BUILD=ON $(flags) ..
    make -j 8
  displayName: 'Build'

- script: |
    export LLVM_PROFILE_FILE=%p.profraw
    cd build
    ctest
  displayName: 'Run tests'

- script: |
    cd build
    find . -name *.profraw -exec llvm-profdata-7 merge -o merged.profdata -sparse {} + ;
    llvm-cov-7 show bin/unittests -instr-profile=merged.profdata > coverage.txt
    bash <(curl -s https://codecov.io/bash) -t $(CODECOV_TOKEN) || echo 'Codecov failed to upload'
  displayName: 'Upload code coverage'
  condition: eq(variables['compiler'], 'clang++-7')