[Lexer]
* Perfect keyword hashing
* Stop lexing if too many errors
* Start of line check for directives
* Test escaped identifiers are not keywords

[Preprocessor]
* Different keyword sets
* Finish macros
* Pragmas
* Other directives
* Controlling macros on includes
* Macro replace include file

[Parser]
* Stack overflow prevention
* Give syntax nodes a Kind for as<> casting
* Unify parser and preprocessor support code

[parsing]
* Randomize / Array method "with" blocks
* Sequence methods
* Param expressions
* Type reference expression
* Assignment patterns
* Casting
* Bullet proof integer expressions

When skipping to an end keyword, break out if we encounter some other kind of end
Include and macro directives should come *after* the stuff they insert into the stream
Diagnostics should load from file and have customizable displayers

FILE and LINE macros
Error on recursive macros
Mark tokens from arguments as being ok to "recursively" expand
Warn on redefining macros
Stringifying and concatenating tokens
Include directive macros
Macros that have other directives in their bodies?