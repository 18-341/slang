name: CI Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - preset: clang-sanitize
            os: ubuntu-22.04
          - preset: gcc-release
            os: ubuntu-22.04
          - preset: gcc-9-release
            os: ubuntu-22.04
          - preset: macos-release
            os: macos-latest
          - preset: win64-release
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Install dependencies
      if: matrix.os == 'ubuntu-22.04'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-14 main"
        sudo apt-get update
        sudo apt-get install -y g++-12 g++-9 clang++-14 clang-tidy-14
    - uses: ilammy/msvc-dev-cmd@v1
      if: matrix.os == 'windows-latest'
    - name: Configure
      run: cmake --preset ${{ matrix.preset }} -DCI_BUILD=ON
    - name: Build
      run: cmake --build build/${{ matrix.preset }} -j8
    - name: Run tests
      run: |
        cd build/${{ matrix.preset }}
        ctest --output-on-failure
    #- name: Upload code coverage
    #  if: matrix.preset == 'clang-ci-coverage'
    #  run: |
    #    cd build/${{ matrix.preset }}
    #    find . -name *.profraw -exec llvm-profdata-14 merge -o merged.profdata -sparse {} + ;
    #    llvm-cov-14 show bin/unittests -instr-profile=merged.profdata > coverage.txt
    #    curl -Os https://uploader.codecov.io/latest/linux/codecov
    #    chmod +x codecov
    #    ./codecov
